1596131312 #js-frontend:mozilla.org Converting ErrorSymbol to a non-terminal and adding implicit `[LineTerminator here]` rules, such that these can be produced and consumed by the Parse Table logic, and consequently be optimized out …
1596563264 #js-frontend:mozilla.org Almost handle ASI completely at parser-generation time … which strangely increases the number of inconsistencies by a factor of 3 (as well at the time needed to get rid of these).
1596721868 #js-frontend:mozilla.org Apparently lower-reduce-action needs an extra condition (`FilterTerms`) to check for the pushed tokens/nonterminals in case the sharing were to alias states which do not have the same list of terminals. Strangely this cases did not appear before …
1596721970 #js-frontend:mozilla.org This is necessary to distinguish between the various replay path which might be taken after an Unwind action. Without this new `FilterTerms` action, lower-reduce-action would produce inconsistent `FilterStates` conditions.
1596722146 #js-frontend:mozilla.org The alternative would be to split every shared path which could be reduced with lookahead token, which I am not sure whether this is a better alternative or not. As this is a trade-off between the amount of code generated (split shared path) and the amount of branches produced (adding `FilterTerms`).
1596804738 #js-frontend:mozilla.org ASI causes the chasing of grammar inconsistencies to take 9 more minutes … maybe there is a way to do ASI after …