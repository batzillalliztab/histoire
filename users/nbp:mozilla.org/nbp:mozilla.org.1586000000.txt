1586368262 #js-frontend:mozilla.org Making progress, I am able to convert Reduce actions to Unwind, FilterStates and Replay actions in a timely manner. Now, I only have to support these new actions in the Rust backend and check what the performance profile looks like. (however I had to disable the folding of reduce action after noticing a bug)
1586452682 #js-frontend:mozilla.org Pushing a [work-in-progress branch](https://github.com/nbp/jsparagus/tree/optimize) where I look into adding `FilterStates`, `Replay` and `Unwind` actions, to control the Parser state without returning back to the `shift` loop. However, the generated code causes Rust/LLVM to avoid optimizing the code, and makes the end result slower.